:q
square 4
:c -d
:a
:q
:a
:c -d
t = f x y z
:q
:c -d
:c
t = f x y z
:q
f (sum 1 1) (sum 2 2)
sum x y = x + y
f (1+1) (2+2)
f 1 2
:c
f
f x y = x y
:q
square (square (square (square 3)))
:s strict
square (square (square (square 3)))
square (square (square 3))
:s lazy
square (square (square 3))
square (square (square 3)))
:q
sd' (square 2) (sd' 2 1)
:s strict
sd' (square 2) (sd' 2 1)
:s lazy
sd' (square 2) (sd' 2 1)
sd' (square 2) (fact 2)
:s lazy
sd' (square 2) (fact 2)
sd' (square 2) (fact 0)
:s strict
sd' (square 2) (fact 0)
:c
sd' x y = x / y
safeDiv (safeDiv 4 2) (square 2) 
:s lazy
safeDiv (safeDiv 4 2) (square 2) 
:c
square (square (square 2))
:s strict
square (square (square 2))
square (square 2)
:s lazy
square (square 2)
2+2
:q
2+2
:q
square (square 2)
:set strict
square (square 2)
:set lazy
square (square 2)
:q
square (square 2)
:s strict
square (square 2)
square (2+2)
:s lazy
square (2+2)
:q
square (2+2)
:s lazy
square (2+2)
square (square 2)
:s strict
square (square 2)
square (2+2)
:s lazy
square (2+2)
:s strict
:q
square (2+2)
square 4
:c
:c -d
List String
Maybe Int
:q
:c -d
:c
t = {1, "hello", String, quad 4}
:q
fact 4
:q
t = :1
t = &1
t = -1
1
-1
:quit
compare 1 0
