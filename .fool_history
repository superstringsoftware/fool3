:q
safeDiv 4 0
safeDiv 4 3
:c
fact 4
fx "hello" 1
fx x y = Pair x y
:q
fx "hello" 1
fx x y = Pair x y
:q
fx "hello" 1
:c
fx x y = Pair x y
:c
hello
"hello"
:q
l 3
:c
l = (\ x -> x +1)
:c
:q
:c
area width height = width * height
:c -d
:core
ff = case x of (Just t) -> Nothing
case x of (Just t) -> Nothing
:core
fx Int 4
fx x y = Pair x y
:q
fx Int 4
fx 2 3
fx x y = Pair x y
:core
l
l = Cell 4 (Cell 2 (Cell 1 Nil))
l
l = Cell 4 (Cell 2 Nil)
safeDiv 4 0
safeDiv 4 2
:c
:l base.fool 
:c
:l base.fool 
:q
:core
:l test1.fool 
:q
quad 44
:c
:q
:core -d
:core
:q
fact 4
square (square 3)
:q
fact 4
fact 3
quad 4
square 4
:core
:q
fact 4
fact 3
quad 3
square 3
:core
:q
square (square 3)
quad 3
:q
Maybe Int
fact 10
fact 4
quad 4
:q
Maybe 4
Maybe Int
quad 3
square 4
:q
Maybe (List a)
Maybe Int
:q
:c
:l test1.fool 
:c
:q
:c
fact 2
fact 3
fact 5
square 3
:q
:c
:q
