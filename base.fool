# Base library: v0.0.1

mul = primop;

# Types
type Bool = True + False;
type Maybe a = Nothing + Just :a;
type List a = Nil + Cons :a * :(List a);

# Functions
id x = x;
fact n = n ?
    0 -> 1
  | otherwise -> n * fact(n-1);


# trying typeclasses
class Functor f = 
  fmap:(f b) g:(a->b) x:(f a);

class Eq a =
    (==) 4 x:a y:a = not (x /= y) # default implementation
    (/=) 4 x:a y:a = not (x == y);    

  
