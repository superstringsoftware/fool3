:q
square (2+2)
:s lazy
square (2+2)
square (square 2)
:s strict
square (square 2)
square (2+2)
:s lazy
square (2+2)
:s strict
:q
square (2+2)
square 4
:c
:c -d
List String
Maybe Int
:q
:c -d
:c
t = {1, "hello", String, quad 4}
:q
fact 4
:q
t = :1
t = &1
t = -1
1
-1
:quit
compare 1 0
compare 1 2
:c
t = < {1,2}, {int, string}>
t
t = < 1,2 ,"hello",mye >
t = < 1,2 ,3 >
t = < 1 >
:q
t = < 1 >
:q
x y = y + <1,2,3>:q
x y = y + <1,2,3><<>
x y = y + <1,2,3><<
x y = y + <1,2,3><
x y = y + <1,2,3>
x = f < x
x = f << x
x = f >> x
t = < 1 >>
t = < 1 >
t = < >
t = < 1 >
:q
x = { {1,2}, "hello"}
x = f <> f
x < >
x <>
t < >
t = < >
t = < 1 >
t = < 1,2, "hello" >
t = < 1,2,"hello" >
t = (< 1,2,"hello"> )
t = < 1,2,"hello"> )
t = < 1,2,"hello"> 1<
t = < 1,2,"hello"> 1>
t = < 1,2,"hello"> 1
t = < 1,2,"hello">>
t = < 1,2,"hello">;
t = < 1,2,"hello">
t  <1,2,"hello">
t = <1,2,"hello">
:q
t = <1,2,"hello">
tt x = &x
tt x = & x
tt
tt x = x ---> y >>->>*- z
:c
:l test1.fool 
:l test1.fool 
:l test1.fool 
compare 1 0
compare 1 2
fact 4
square 4
:q
t = &g + x
t = &g
t = ?*g
t = ?g
t = ? g
t = < g
t = < 1
t = < 1,2,"hello">
t = <1,2,"hello">
t  <1,2,"hello">
:c
