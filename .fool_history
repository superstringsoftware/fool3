:q
:c
:l test1.fool 
:q
:c
t = f <1, 2, var, "h">
:c
t = f <1, 2, var, "h"> 18 "test"
:q
:c
t = f <1, 2, var, "h"> 18 "test"
:q
:c
t = f <1, 2, var, "h"> 18 "test"
:q
:c
t = f <1, 2, var, "h"> 18 "test"
:q
t = f <1, 2, var, "h"> 18 "test"
:c
t = f {1, 2, var, "h"} 18 "test"
:c
t = f [1, 2, var, "h"] 18 "test"
:q
:c
t = f [1, 2, var, "h"] 18 "test"
:c
t = f {1, 2, var, "h"} 18 "test"
:c
t = f {1, 2, var, "h"}
:q
t = f {x}
t = f {var}
t = f {vart}
t = f {1}
t = f {1, 2, var, "h"}
:q
t = f {1, 2, var, "h"}
t = f {1, 2, "h"}
t = f [1, "hello", 24.3, "test"]
t = f [1, "hello"]
t = f [1, "hello", var]
t = f { 1, "hello", var }
:q
t = f { 1, "hello", var }
t = f {1, "hello", var}
:c
t = f [1, "hello"]
:q
:c
r1 = r1 "hello" 2 3 4 8
r = r x y 5
:q
:c
r = x ---> y ( sq >>=>*> 8)
:c
:l test1.fool 
:l test1.fool 
:q
:c
t = map (\x -> x * 3) "test"
:q
:c
t = map (\x -> x * 3) test
:c
t = map (\x -> x * 3) test
:q
:c -d
:q
t = f x y
:c -d
:q
:c -d
:q
:c -d
:q
:q
t = f (x y) z
t = f (x y z)
t = f x y z
:q
:q
:c
sum x y = x+y
:q
:q
:q
:q
:q
:q
:q
:q
:q
:q
:q
:q
:q
:q
:q
f x = square x
